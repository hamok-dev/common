name: Publish
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      working-directory: ./npm-lib
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install
        run: yarn
        working-directory: ${{env.working-directory}}

      - name: Build
        run: yarn build
        working-directory: ${{env.working-directory}}

      - name: Test
        run: yarn test 
        working-directory: ${{env.working-directory}}

      - name: Setup Custom Contexts
        shell: bash
        working-directory: ${{env.working-directory}}
        run: | 
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
          echo "##[set-output name=version;]$(cat ./package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')"
          echo "##[set-output name=short_sha;]$(git rev-parse --short HEAD)"
        id: job_context

      - name: Make snapshot version
        working-directory: ${{env.working-directory}}
        if: steps.job_context.outputs.branch != 'master'
        run: |
          npm version prerelease --preid=${{ steps.job_context.outputs.short_sha }} --git-tag-version false

      - name: Publish package to latest
        working-directory: ${{env.working-directory}}
        if: steps.job_context.outputs.branch == 'master'
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm publish --ignore-scripts --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish package to branch-tag
        working-directory: ${{env.working-directory}}
        if: steps.job_context.outputs.branch != 'master'
        run: |
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm publish --ignore-scripts --access public  --tag $(echo "develop-${{ steps.job_context.outputs.version }}-rc" | sed 's/[.]//g')
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}